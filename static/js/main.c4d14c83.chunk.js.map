{"version":3,"sources":["actions/listsActions.js","actions/cardsActions.js","actions/classActions.js","actions/index.js","reducers/listsReducer.js","reducers/cardsReducer.js","reducers/classesReducer.js","reducers/classOrderReducer.js","reducers/activeClassReducer.js","reducers/index.js","store/index.js","components/TrelloForm.js","components/TrelloButton.js","components/TrelloDatePicker.js","components/TrelloCard.js","components/TrelloOpenForm.js","components/TrelloAdd.js","components/TrelloList.js","components/TrelloClass.js","components/ClassObject.js","components/BurgerClass.js","components/FileUpload.js","components/Home.js","routes/index.js","components/App.js","serviceWorker.js","index.js"],"names":["addList","title","dispatch","getState","classID","activeClass","id","uuid","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addListByID","ADD_LIST_BY_ID","addCard","listID","text","date","ADD_CARD","addClass","ADD_CLASS","editClassTitle","newTitle","EDIT_CLASS_TITLE","EDIT_CARD_TITLE","EDIT_CARD_DATE","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","SET_ACTIVE_CLASS","DELETE_CLASS","ADD_CLASS_WITH_LISTS","SET_LIST","initialState","list-0","cards","class","list-1","list-2","listsReducer","state","arguments","length","undefined","action","_action$payload","newList","concat","Object","objectSpread","defineProperty","_action$payload2","_action$payload3","list","push","_action$payload4","_list$cards","card","splice","apply","toConsumableArray","_listEnd$cards","_objectSpread6","listStart","listEnd","_action$payload5","newCards","filter","cardID","_action$payload6","_action$payload7","newState","currentDate","moment","format","card-0","card-1","card-2","cardsReducer","newCard","newText","newDate","class-0","lists","classesReducer","c","newListID","newLists","console","log","pulledOutList","newID","newClass","id_class","classOrderReducer","activeClassReducer","combineReducers","classes","classOrder","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","src_store","store","createStore","applyMiddleware","thunk","persistor","persistStore","Container","styled","div","_templateObject","StyledCard","Card","_templateObject2","StyledTextArea","Textarea","_templateObject3","ButtonContainer","_templateObject4","StyledIcon","Icon","_templateObject5","TrelloForm","React","memo","_ref","_ref$text","onTextChange","closeForm","children","react_default","a","createElement","placeholder","autoFocus","value","onChange","e","onBlur","onMouseDown","StyledButton","Button","TrelloButton_templateObject","TrelloButton","onClick","variant","connect","_useState","useState","toDate","_useState2","slicedToArray","cardDate","setDate","handleChange","editCardDate","style","position","bottom","left","fontSize","react_datepicker_min_default","selected","customStyles","dateInput","outline","dateFormat","className","CardContainer","TrelloCard_templateObject","EditButton","TrelloCard_templateObject2","DeleteButton","TrelloCard_templateObject3","TrelloCard","index","isEditing","setIsEditing","_useState3","_useState4","cardText","setText","handleTextChange","target","saveCard","preventDefault","editCardTitle","handleDeleteCard","deleteCard","components_TrelloForm","components_TrelloButton","react_beautiful_dnd_esm","String","provided","assign","draggableProps","dragHandleProps","ref","innerRef","onDoubleClick","Card_default","CardContent_default","Typography_default","marginBottom","components_TrelloDatePicker","TrelloOpenForm","buttonTextOpacity","buttonTextColor","buttonTextBackground","OpenFormButton","TrelloOpenForm_templateObject","Icon_default","flexShrink","TrelloAdd","formOpen","openForm","_this","setState","handleDateChange","handleAddList","props","handleAddCard","_this$props","this","components_TrelloOpenForm","PureComponent","ListContainer","TrelloList_templateObject","TitleContainer","TrelloList_templateObject2","TrelloList_templateObject3","ListTitle","h4","TrelloList_templateObject4","listTitle","setListTitle","handleFocus","select","handleFinishEditing","editTitle","handleDeleteList","deleteList","droppableId","onSubmit","onFocus","TrelloList_DeleteButton","droppableProps","map","components_TrelloCard","components_TrelloAdd","ListsContainer","TrelloClass_templateObject","HomeIcon","TrelloClass_templateObject2","TrelloClass","onDragEnd","result","destination","source","match","params","listOrder","marginLeft","padding","react_router_dom","to","textDecoration","fontWeight","color","right","top","direction","listCards","components_TrelloList","Outline","ClassObject_templateObject","ClassContent","ClassObject_templateObject2","Title","ClassObject_templateObject3","Due","ClassObject_templateObject4","nextDate","minDate","BurgerClass_templateObject","TitleClass","BurgerClass_templateObject2","classTitle","setClassTitle","handleClassChange","BurgerClass_DeleteButton","float","classMap","Map","fileReader","handleFileRead","content","events","ICAL","parse","brackets","forEach","event","i","prop","parseEvent","len","keys","summary","dateEnd","dtend","sumLen","j","includes","charAt","pop","assignmentArr","substr","has","arr","get","set","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","entries","Symbol","iterator","next","done","_ref4","_ref3","err","return","_addLists","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","size","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref11","_ref10","stop","accept","file","files","FileReader","onloadend","readAsText","opacity","paddingTop","paddingBottom","textAlign","Button_default","marginRight","cursor","l","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref7","_ref6","Thumbnails","Home_templateObject","HomeContainer","Home_templateObject2","AddHeaders","li","Home_templateObject3","DateTag","span","Home_templateObject4","AllTitle","Home_templateObject5","ClearButton","_templateObject6","getWindowDimensions","_window","window","width","innerWidth","height","innerHeight","newClassTitle","setNewClassTitle","_useState5","_useState6","showAdd","setShowAdd","_useState7","_useState8","showEdit","setShowEdit","_useWindowDimensions","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","handleSubmit","clearState","Store","purge","location","reload","handleAddVisibility","handleEditVisibility","renderCreateClass","marginTop","components_FileUpload","maxLength","renderEditClasses","components_BurgerClass","BurgerMenu","pageWrapId","ExpandMore_default","nearestDate","count","components_ClassObject","AppRouter","react_router","path","exact","component","Home","App","routes","Boolean","hostname","GlobalStyle","createGlobalStyle","src_templateObject","ReactDOM","render","es","integration_react","loading","components_App","document","getElementById","$","bind","nodeName","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4d14c83.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const addList = title => {\n  return (dispatch, getState) => {\n    const classID = getState().activeClass;\n    const id = uuid();\n    dispatch({\n      type: CONSTANTS.ADD_LIST,\n      payload: { title, classID, id }\n    });\n  };\n};\n\nexport const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId,\n  type\n) => {\n  return (dispatch, getState) => {\n    const classID = getState().activeClass;\n    dispatch({\n      type: CONSTANTS.DRAG_HAPPENED,\n      payload: {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n        draggableId,\n        type,\n        classID\n      }\n    });\n  };\n};\n\nexport const editTitle = (listID, newTitle) => {\n  return {\n    type: CONSTANTS.EDIT_LIST_TITLE,\n    payload: {\n      listID,\n      newTitle\n    }\n  };\n};\n\nexport const deleteList = listID => {\n  return (dispatch, getState) => {\n    const classID = getState().activeClass;\n    return dispatch({\n      type: CONSTANTS.DELETE_LIST,\n      payload: {\n        listID,\n        classID\n      }\n    });\n  };\n};\n\nexport const addListByID = (classID, title) => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_LIST_BY_ID,\n    payload: { title, classID, id }\n  };\n};\n\nexport const setList = (listID, newTitle, classID) => {\n  return {\n    type: CONSTANTS.SET_LIST,\n    payload: {\n      listID,\n      newTitle,\n      classID,\n    }\n  };\n};\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const addCard = (listID, text, date) => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_CARD,\n    payload: { text, listID, id, date }\n  };\n};\n\nexport const editCardTitle = (id, listID, newText) => {\n  return {\n    type: CONSTANTS.EDIT_CARD_TITLE,\n    payload: { id, listID, newText }\n  };\n};\n\nexport const editCardDate = (id, listID, newDate) => {\n  return {\n    type: CONSTANTS.EDIT_CARD_DATE,\n    payload: { id, listID, newDate }\n  };\n};\n\nexport const deleteCard = (id, listID) => {\n  return {\n    type: CONSTANTS.DELETE_CARD,\n    payload: { id, listID }\n  };\n};\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const setActiveClass = id => {\n  return {\n    type: CONSTANTS.SET_ACTIVE_CLASS,\n    payload: id\n  };\n};\n\nexport const addClass = title => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_CLASS,\n    payload: { title, id }\n  };\n};\n\nexport const deleteClass = (classID) => {\n  return {\n    type: CONSTANTS.DELETE_CLASS,\n    payload: { classID }\n  };\n};\n\nexport const editClassTitle = (classID, newTitle) => {\n  return {\n    type: CONSTANTS.EDIT_CLASS_TITLE,\n    payload: { classID, newTitle }\n  };\n};\n\nexport const addClassWithLists = (title) => {\n  const id_class = uuid();\n  const id_list1 = uuid();\n  const id_list2 = uuid();\n  const id_list3 = uuid();\n\n  return {\n    type: CONSTANTS.ADD_CLASS_WITH_LISTS,\n    payload: {title, id_class, id_list1, id_list2, id_list3}\n\n  }\n\n\n}","export * from \"./listsActions\";\nexport * from \"./cardsActions\";\nexport * from \"./classActions\";\n\nexport const CONSTANTS = {\n  ADD_CARD: \"ADD_CARD\",\n  ADD_LIST: \"ADD_LIST\",\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\n  EDIT_CARD_TITLE: \"EDIT_CARD_TITLE\",\n  EDIT_CARD_DATE: \"EDIT_CARD_DATE\",\n  DELETE_CARD: \"DELETE_CARD\",\n  EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\n  DELETE_LIST: \"DELETE_LIST\",\n  SET_ACTIVE_CLASS: \"SET_ACTIVE_CLASS\",\n  ADD_CLASS: \"ADD_CLASS\",\n  DELETE_CLASS: \"DELETE_CLASS\",\n  EDIT_CLASS_TITLE: \"EDIT_CLASS_TITLE\",\n  ADD_LIST_BY_ID: \"ADD_LIST_BY_ID\",\n  ADD_CLASS_WITH_LISTS: \"ADD_CLASS_WITH_LISTS\",\n  SET_LIST: \"SET_LIST\",\n};\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"list-0\": {\n    id: \"list-0\",\n    cards: [\"card-0\"],\n    title: \"Assignments\",\n    class: \"class-0\"\n  },\n  \"list-1\": {\n    id: \"list-1\",\n    cards: [\"card-1\"],\n    title: \"Quizzes\",\n    class: \"class-0\"\n  },\n  \"list-2\": {\n    id: \"list-2\",\n    cards: [\"card-2\"],\n    title: \"Exams\",\n    class: \"class-0\"\n  },\n};\n\nconst listsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { title, id } = action.payload;\n      const newList = {\n        title: title,\n        id: `list-${id}`,\n        cards: []\n      };\n\n      const newState = { ...state, [`list-${id}`]: newList };\n\n      return newState;\n    }\n\n    case CONSTANTS.ADD_LIST_BY_ID: {\n      const {title, id} = action.payload;\n      const newList = {\n        title: title,\n        id: `list-${id}`,\n        cards:[],\n        // class: classID\n      }\n\n      const newState = { ...state, [`list-${id}`]: newList };\n\n      return newState;\n    }\n\n    case CONSTANTS.ADD_CARD: {\n      const { listID, id } = action.payload;\n      const list = state[listID];\n      list.cards.push(`card-${id}`);\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type\n      } = action.payload;\n\n      // draggin lists around - the listOrderReducer should handle this\n      if (type === \"list\") {\n        return state;\n      }\n\n      // in the same list\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state[droppableIdStart];\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n        return { ...state, [droppableIdStart]: list };\n      }\n\n      // other list\n      if (droppableIdStart !== droppableIdEnd) {\n        // find the list where the drag happened\n        const listStart = state[droppableIdStart];\n        // pull out the card from this list\n        const card = listStart.cards.splice(droppableIndexStart, 1);\n        // find the list where the drag ended\n        const listEnd = state[droppableIdEnd];\n\n        // put the card in the new list\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n        return {\n          ...state,\n          [droppableIdStart]: listStart,\n          [droppableIdEnd]: listEnd\n        };\n      }\n      return state;\n\n    case CONSTANTS.DELETE_CARD: {\n      const { listID, id } = action.payload;\n\n      const list = state[listID];\n      const newCards = list.cards.filter(cardID => cardID !== id);\n\n      return { ...state, [listID]: { ...list, cards: newCards } };\n    }\n\n    case CONSTANTS.EDIT_LIST_TITLE: {\n      const { listID, newTitle } = action.payload;\n\n      const list = state[listID];\n      list.title = newTitle;\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.SET_LIST: {\n      const { listID, newTitle, classID } = action.payload;\n\n      const list = state[listID];\n      list.id = listID;\n      list.title = newTitle;\n      list.class = classID;\n      list.cards = [];\n      return { ...state, [listID]: list };\n    }\n\n\n    case CONSTANTS.DELETE_LIST: {\n      const { listID } = action.payload;\n      const newState = state;\n      delete newState[listID];\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;\n","import { CONSTANTS } from \"../actions\";\nimport moment from \"moment\";\n\nconst currentDate = moment().format();\n\nconst initialState = {\n  \"card-0\": {\n    text: \"Homework goes here\",\n    id: `card-0`,\n    list: \"list-0\",\n    date: currentDate,\n  },\n  \"card-1\": {\n    text: \"Quizzes go here\",\n    id: `card-1`,\n    list: \"list-1\",\n    date: currentDate,\n  },\n  \"card-2\": {\n    text: \"Exams go here\",\n    id: `card-2`,\n    list: \"list-2\",\n    date: currentDate,\n  }\n};\n\nconst cardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_CARD: {\n      const { text, listID, id, date } = action.payload;\n\n      const newCard = {\n        text,\n        id: `card-${id}`,\n        list: listID,\n        date,\n      };\n\n      return { ...state, [`card-${id}`]: newCard };\n    }\n    case CONSTANTS.EDIT_CARD_TITLE: {\n      const { id, newText } = action.payload;\n      const card = state[id];\n      card.text = newText;\n      // card.date = newDate;\n      return { ...state, [`card-${id}`]: card };\n    }\n\n    case CONSTANTS.EDIT_CARD_DATE: {\n      const { id, newDate } = action.payload;\n      const card = state[id];\n      card.date = newDate;\n      return { ...state, [`card-${id}`]: card };\n    }\n\n    case CONSTANTS.DELETE_CARD: {\n      const { id } = action.payload;\n      const newState = state;\n      delete newState[id];\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsReducer;\n","// import React, {Component} from 'react';\nimport { CONSTANTS } from \"../actions\";\n// import { addListByID } from \"../actions\";\n\nconst initialState = {\n  \"class-0\": {\n    id: \"class-0\",\n    lists: [\"list-0\", \"list-1\", \"list-2\"],\n    title: \"myclass\"\n  },\n};\n\n\n\n\nconst classesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { classID, id } = action.payload;\n      const c = state[classID];\n      const newListID = `list-${id}`;\n      const newLists = [...c.lists, newListID];\n      c.lists = newLists;\n      return { ...state, [classID]: c };\n    }\n\n    case CONSTANTS.ADD_LIST_BY_ID: {\n      const { classID, id } = action.payload;\n      const c = state[classID];\n      const newListID = `list-${id}`;\n      const newLists = [...c.lists, newListID];\n      c.lists = newLists;\n      console.log(\"NEW LIST ADDED\");\n\n      return { ...state, [classID]: c };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED: {\n      const { classID } = action.payload;\n      const c = state[classID];\n      const lists = c.lists;\n      const {\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type\n      } = action.payload;\n\n      // dragging lists around\n      if (type === \"list\") {\n        const pulledOutList = lists.splice(droppableIndexStart, 1);\n        lists.splice(droppableIndexEnd, 0, ...pulledOutList);\n        c.lists = lists;\n\n        return { ...state, [classID]: c };\n      }\n      return state;\n    }\n    case CONSTANTS.DELETE_LIST: {\n      const { listID, classID } = action.payload;\n      const c = state[classID];\n      const lists = c.lists;\n      const newLists = lists.filter(id => id !== listID);\n      c.lists = newLists;\n      return { ...state, [classID]: c };\n    }\n\n    case CONSTANTS.ADD_CLASS: {\n      const { title, id } = action.payload;\n      const newID = `class-${id}`;\n      const newClass = {\n        id: newID,\n        title,\n        lists: [],\n      };\n\n      return { ...state, [newID]: newClass };\n    }\n\n    case CONSTANTS.DELETE_CLASS: {\n      const { classID } = action.payload;\n      const newState = state;\n      delete newState[classID];\n      return newState;\n    }\n\n\n    case CONSTANTS.EDIT_CLASS_TITLE: {\n      const { classID, newTitle } = action.payload;\n\n      const c = state[classID];\n      c.title = newTitle;\n      return { ...state, [classID]: c };\n    }\n    \n    case CONSTANTS.ADD_CLASS_WITH_LISTS: {\n      const { title, id_class} = action.payload;\n      const newID = `class-${id_class}`;\n      // const newID_list1 = `list-${id_list1}`;\n      // const newID_list2 = `list-${id_list2}`;\n      // const newID_list3 = `list-${id_list3}`;\n      // const myLists = {\n      //   newID_list1: {\n      //     id: newID_list1,\n      //     cards: [],\n      //     title: \"Assignments\",\n      //     class: newID\n      //   },\n      //   newID_list2: {\n      //     id: newID_list2,\n      //     cards: [],\n      //     title: \"Quizzes\",\n      //     class: newID\n      //   },\n      //   newID_list3: {\n      //     id: newID_list3,\n      //     cards: [],\n      //     title: \"Exams\",\n      //     class: newID\n      //   },\n      // };\n      // addListByID(newID, \"Assignments\");\n      \n      const newClass = {\n        id: newID,\n        title,\n        lists: [],\n      };\n\n      return { ...state, [newID]: newClass };\n\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default classesReducer;\n","import { CONSTANTS } from \"../actions\";\n// import { addListByID } from \"../actions\";\n// import uuid from \"uuidv4\";\n\n// console.log(uuid());\n\nconst initialState = [\"class-0\"];\n\nconst classOrderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_CLASS: {\n      return [...state, `class-${action.payload.id}`];\n    }\n\n    case CONSTANTS.ADD_CLASS_WITH_LISTS: {\n      // console.log(\"class order reducer\");\n      return [...state, `class-${action.payload.id_class}`];\n      // addListByID(`class-${action.payload.id_class}`, \"Assignments\");\n    }\n    case CONSTANTS.DELETE_CLASS: {\n      const { classID } = action.payload;\n      // const newState = state;\n      // const c = state[classID];\n      // let count= 0;\n      // state.forEach(element => {if (element.id === classID){count++;}});\n      // newState.splice(count, 1);\n\n      // return newState;\n      return state.filter(c => c.id !== classID);\n    }\n\n\n    default:\n      return state;\n  }\n};\n\nexport default classOrderReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = null;\n\nconst activeClassReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.SET_ACTIVE_CLASS: {\n      return action.payload;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default activeClassReducer;\n","import { combineReducers } from \"redux\";\nimport listsReducer from \"./listsReducer\";\nimport cardsReducer from \"./cardsReducer\";\nimport classesReducer from \"./classesReducer\";\nimport classOrderReducer from \"./classOrderReducer\";\nimport activeClassReducer from \"./activeClassReducer\";\n// import { REHYDRATE, PURGE } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\"; // local storage\n\nexport default combineReducers({\n  lists: listsReducer,\n  cards: cardsReducer,\n  classes: classesReducer,\n  classOrder: classOrderReducer,\n  activeClass: activeClassReducer\n});\n\n\n// const appReducer = combineReducers({\n//   /* your app’s top-level reducers */\n//   lists: listsReducer,\n//   cards: cardsReducer,\n//   classes: classesReducer,\n//   classOrder: classOrderReducer,\n//   activeClass: activeClassReducer\n// })\n\n// const rootReducer = (state, action) => {\n\n//   switch(action.type) {\n//       // case PURGE: {\n//       //   // storage.removeItem('persist:root')\n//       //   state = undefined;\n\n//       // }\n//       // case REHYDRATE: {\n//       //   return state;\n//       // }\n//       case RESET: {\n//         return state;\n//       }\n//   }\n  \n//   return appReducer(state, action);\n// };\n\n// export default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport thunk from \"redux-thunk\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // local storage\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n\n//GETTING RID OF LOCAL STORAGE\n\n// import { createStore } from \"redux\";\n// import rootReducer from \"../reducers\";\n\n// const store = createStore(rootReducer);\n\n// export default store;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Textarea from \"react-textarea-autosize\";\nimport Card from \"@material-ui/core/Card\";\n\nconst Container = styled.div`\n  min-width: 284px;\n  margin-bottom: 8px;\n`;\n\nconst StyledCard = styled(Card)`\n  min-height: 85px;\n  padding: 6px 8px 2px;\n`;\n\n\nconst StyledTextArea = styled(Textarea)`\n  resize: none;\n  width: 100%;\n  overflow: hidden;\n  outline: none;\n  border: none;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-top: 8px;\n  display: flex;\n  align-items: center;\n  margin-left: 8px;\n`;\n\nconst StyledIcon = styled(Icon)`\n  margin-left: 8px;\n  cursor: pointer;\n`;\n\nconst TrelloForm = React.memo(\n  ({ list, text = \"\", onTextChange, closeForm, children }) => {\n    // const placeholder = list\n    //   ? \"Enter list title...\"\n    //   : \"Enter a title for this card...\";\n    // const isList = list ? true : false;\n\n\n    const renderFormList =() => {\n      console.log(\"opening list\")\n      return (\n        <Container>\n          <StyledCard>\n            <StyledTextArea\n              placeholder=\"Enter list title...\"\n              autoFocus\n              value={text}\n              onChange={e => onTextChange(e)}\n              onBlur={closeForm}\n            />\n          </StyledCard>\n          <ButtonContainer>\n            {children}\n            <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\n          </ButtonContainer>\n        </Container>\n      );\n\n\n\n    };\n\n    const renderFormCard = () => {\n      console.log(\"opening card\");\n      return (\n        <Container>\n          <StyledCard>\n            <StyledTextArea\n              placeholder=\"Enter a title for this card...\"\n              autoFocus\n              value={text}\n              onChange={e => onTextChange(e)}\n              onBlur={closeForm}\n            />\n          </StyledCard>\n          <ButtonContainer>\n            {children}\n            <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\n          </ButtonContainer>\n        </Container>\n      );\n    };\n\n\n    return list ? renderFormList() : renderFormCard();\n\n  }\n);\n\nexport default TrelloForm;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\n\nconst StyledButton = styled(Button)`\n  && {\n    color: white;\n    background: #5aac44;\n  }\n`;\n\nconst TrelloButton = ({ children, onClick }) => {\n  return (\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default TrelloButton;\n","import React, {useState} from 'react';\nimport DatePicker from \"react-datepicker\";\nimport { connect } from \"react-redux\";\nimport { editCardDate } from \"../actions\";\nimport \"./css/main.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\n\n\nconst TrelloDatePicker = ({ date, listID, id, dispatch }) => {\n    const [cardDate, setDate] = useState(moment(date).toDate());\n    // const [datePickerOpen, setDatePickerOpen] = useState(false);\n\n    const handleChange = (newDate) => {\n        setDate(newDate);\n        // console.log(date);\n        // console.log(\"new date: \" + newDate);\n        \n        dispatch(editCardDate(id,listID,newDate));\n    }\n\n    return (\n        <div style={{position: 'absolute', bottom: 5, left: 13, fontSize: 12}}>\n            <DatePicker\n              selected={cardDate}\n              onChange={date => handleChange(date)}\n              customStyles={{dateInput:{outline:'none'}}}\n              dateFormat=\"MMM d\"\n              className=\"date-picker\"\n            />\n        </div>\n    );\n};\n\nexport default connect()(TrelloDatePicker);","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloForm from \"./TrelloForm\";\nimport { editCardTitle, deleteCard } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport TrelloButton from \"./TrelloButton\";\nimport TrelloDatePicker from \"./TrelloDatePicker\";\n\nconst CardContainer = styled.div`\n  margin: 0 0 8px 0;\n  position: relative;\n  max-width: 100%;\n  word-wrap: break-word;\n`;\n\nconst EditButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  top: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst DeleteButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  bottom: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst TrelloCard = React.memo(({ text, date, id, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [cardText, setText] = useState(text);\n\n  const closeForm = e => {\n    setIsEditing(false);\n  };\n\n  const handleTextChange = e => {\n    setText(e.target.value);\n  };\n\n  const saveCard = e => {\n    e.preventDefault();\n\n    dispatch(editCardTitle(id, listID, cardText));\n    setIsEditing(false);\n  };\n\n  const handleDeleteCard = e => {\n    console.log(listID);\n    dispatch(deleteCard(id, listID));\n  };\n\n  const renderEditForm = () => {\n    return (\n      <TrelloForm list={false} text={cardText} onTextChange={handleTextChange} closeForm={closeForm}>\n        <TrelloButton onClick={saveCard}>Save</TrelloButton>\n      </TrelloForm>\n    );\n  };\n\n  const renderCard = () => {\n    return (\n      <Draggable draggableId={String(id)} index={index}>\n        {provided => (\n          <CardContainer\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            onDoubleClick={() => setIsEditing(true)}\n          >\n            <Card>              \n              <EditButton\n                onMouseDown={() => setIsEditing(true)}\n                fontSize=\"small\"\n              >\n                edit\n              </EditButton>\n              <DeleteButton fontSize=\"small\" onMouseDown={handleDeleteCard}>\n                delete\n              </DeleteButton>\n\n              <CardContent>\n                <Typography style={{marginBottom:12}}>{text}</Typography>\n                <TrelloDatePicker date={date} id={id} listID={listID}/>\n              \n              </CardContent>\n              {/* <div>\n                Due Date\n              </div> */}\n            </Card>\n          </CardContainer>\n        )}\n      </Draggable>\n    );\n  };\n\n  return isEditing ? renderEditForm() : renderCard();\n});\n\n\nexport default connect()(TrelloCard);\n","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport styled from \"styled-components\";\n\nconst TrelloOpenForm = ({ list, children, onClick }) => {\n  const buttonTextOpacity = list ? 1 : 0.5;\n  const buttonTextColor = list ? \"white\" : \"inherit\";\n  const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n\n  const OpenFormButton = styled.div`\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    border-radius: 3px;\n    height: 36px;\n    margin-left: 8px;\n    min-width: 300px;\n    padding-left: 10px;\n    padding-right: 10px;\n    opacity: ${buttonTextOpacity};\n    color: ${buttonTextColor};\n    background-color: ${buttonTextBackground};\n  `;\n\n  return (\n    <OpenFormButton onClick={onClick}>\n      <Icon>add</Icon>\n      <p style={{ flexShrink: 0 }}>{children}</p>\n    </OpenFormButton>\n  );\n};\n\nexport default TrelloOpenForm;\n","import React from \"react\";\nimport TrelloButton from \"./TrelloButton\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\nimport TrelloForm from \"./TrelloForm\";\nimport TrelloOpenForm from \"./TrelloOpenForm\";\nimport moment from \"moment\";\n\nclass TrelloAdd extends React.PureComponent {\n  state = {\n    formOpen: false,\n    text: \"\",\n  };\n\n  openForm = () => {\n    this.setState({\n      formOpen: true\n    });\n  };\n\n  closeForm = e => {\n    this.setState({\n      formOpen: false\n    });\n  };\n\n  handleTextChange = e => {\n    this.setState({\n      text: e.target.value\n    });\n  };\n\n  handleDateChange = e => {\n    this.setState({\n      date: e.target.value\n    });\n  };\n\n  handleAddList = () => {\n    const { dispatch } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addList(text));\n    }\n\n  };\n\n  handleAddCard = () => {\n    const { dispatch, listID } = this.props;\n    const { text } = this.state;\n    const currentDate = moment().format();\n    // console.log(currentDate);\n  \n\n    if (text) {\n      this.setState({\n        text: \"\",\n      });\n      // console.log(\"adding a new card with date: \" + currentDate);\n      dispatch(addCard(listID, text, currentDate));\n    }\n  };\n\n  render() {\n    const { text } = this.state;\n    const { list } = this.props;\n    // console.log(list);\n    return this.state.formOpen ? (\n      <TrelloForm\n        text={text}\n        onTextChange={this.handleTextChange}\n        closeForm={this.closeForm}\n        list={list}\n      >\n        <TrelloButton onClick={list ? this.handleAddList : this.handleAddCard}>\n          {list ? \"Add List\" : \"Add Card\"}\n        </TrelloButton>\n      </TrelloForm>\n    ) : (\n      <TrelloOpenForm list={list} onClick={this.openForm}>\n        {list ? \"Add another list\" : \"Add another card\"}\n      </TrelloOpenForm>\n    );\n  }\n}\n\nexport default connect()(TrelloAdd);\n","import React, { useState } from \"react\";\nimport TrelloCard from \"./TrelloCard\";\nimport TrelloAdd from \"./TrelloAdd\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { editTitle, deleteList } from \"../actions\";\nimport Icon from \"@material-ui/core/Icon\";\nimport \"./css/main.css\";\n\nconst ListContainer = styled.div`\n  background-color: #D59A69;\n  border-radius: 3px;\n  width: 300px;\n  padding: 8px;\n  height: 100%;\n  margin: 0 8px 0 0;\n`;\n\nconst TitleContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst DeleteButton = styled(Icon)`\n  cursor: pointer;\n  transition: opacity 0.3s ease-in-out;\n  opacity: 0.4;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ListTitle = styled.h4`\n  color: white;\n  transition: background 0.3s ease-in;\n  ${TitleContainer}:hover & {\n    background: #ccc;\n  }\n`;\n\nconst TrelloList = ({ title, cards, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [listTitle, setListTitle] = useState(title);\n\n  const renderEditInput = () => {\n    return (\n      <form onSubmit={handleFinishEditing}>\n        <input\n          type=\"text\"\n          value={listTitle}\n          onChange={handleChange}\n          autoFocus\n          onFocus={handleFocus}\n          onBlur={handleFinishEditing}\n          className=\"listTitle-input\"\n        />\n      </form>\n    );\n  };\n\n  const handleFocus = e => {\n    e.target.select();\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    setListTitle(e.target.value);\n  };\n\n  const handleFinishEditing = e => {\n    setIsEditing(false);\n    dispatch(editTitle(listID, listTitle));\n  };\n\n  const handleDeleteList = () => {\n    dispatch(deleteList(listID));\n  };\n\n  return (\n    <Draggable draggableId={String(listID)} index={index}>\n      {provided => (\n        <ListContainer\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          <Droppable droppableId={String(listID)} type=\"card\">\n            {provided => (\n              <div>\n                <div>\n                  {isEditing ? (\n                    renderEditInput()\n                  ) : (\n                    <TitleContainer onClick={() => setIsEditing(true)}>\n                      <ListTitle>{listTitle}</ListTitle>\n                      <DeleteButton onClick={handleDeleteList}>\n                        delete\n                      </DeleteButton>\n                    </TitleContainer>\n                  )}\n                </div>\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  {cards.map((card, index) => (\n                    <TrelloCard\n                      key={card.id}\n                      text={card.text}\n                      date={card.date}\n                      id={card.id}\n                      index={index}\n                      listID={listID}\n                    />\n                  ))}\n                  {provided.placeholder}\n                  <TrelloAdd listID={listID} />\n                </div>\n              </div>\n            )}\n          </Droppable>\n        </ListContainer>\n      )}\n    </Draggable>\n  );\n};\n\nexport default connect()(TrelloList);\n","import React, { PureComponent } from \"react\";\nimport TrelloList from \"./TrelloList\";\nimport { connect } from \"react-redux\";\nimport TrelloAdd from \"./TrelloAdd\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { sort, setActiveClass } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst ListsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst HomeIcon = styled(Icon)`\n  position: absolute;\n  left: 20px;\n  cursor: pointer;\n  color: #907163;\n\n  &:hover {\n    opacity: 0.6;\n  }\n`;\nconst currentDate = moment().format(\"LL\");\n\nclass TrelloClass extends PureComponent {\n\n  componentDidMount() {\n    // set active trello class here\n    const { classID } = this.props.match.params;\n\n    this.props.dispatch(setActiveClass(classID));\n  }\n\n  onDragEnd = result => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      )\n    );\n  };\n\n  render() {\n    const { lists, cards, match, classes } = this.props;\n    const { classID } = match.params;\n    const c = classes[classID];\n    if (!c) {\n      return <p>class not found</p>;\n    }\n    const listOrder = c.lists;\n\n    return (\n      <div style={{marginLeft: 15}}>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          {/* <Link to=\"/\">Back to Classes</Link> */}\n          <div style={{padding: 20, fontSize: 20}}>\n            <Link to=\"/\" style={{ textDecoration: \"none\"}}>\n              <HomeIcon fontSize='large'>home</HomeIcon>\n            </Link>\n            <span style={{fontWeight: 'bold', fontSize: 26, marginLeft: 35, color: '#907163'}}>{c.title}</span>\n            <span style={{position: 'absolute', right: 20, top: 20, color:'#907163'}}>{currentDate}</span>\n\n          </div>\n          <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n            {provided => (\n              <ListsContainer\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {listOrder.map((listID, index) => {\n                  const list = lists[listID];\n                  if (list) {\n                    const listCards = list.cards.map(cardID => cards[cardID]);\n\n                    return (\n                      <TrelloList\n                        listID={list.id}\n                        key={list.id}\n                        title={list.title}\n                        cards={listCards}\n                        index={index}\n                      />\n                    );\n                  }\n                })}\n                {provided.placeholder}\n                <TrelloAdd list />\n              </ListsContainer>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists,\n  cards: state.cards,\n  classes: state.classes\n});\n\nexport default connect(mapStateToProps)(TrelloClass);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\n// import { addListByID} from \"../actions\";\n\nconst Outline = styled.div`\n  height: 300px;\n  width: 300px;\n  // background: #e7a083; \n  background: #D59A69\n  padding: 10px;\n  margin: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 50px;\n  box-shadow: 0 2px 4px black;\n  position: relative;\n  transition: transform .2s; /* Animation */\n  &:hover{\n    transform: scale(1.05)\n  }\n\n`;\n\nconst ClassContent = styled.div `\n  text-align: center;\n`;\n\nconst Title = styled.h4`\n  color: #EAE7DC;\n  font-size: 24px;\n  align-self: center;\n`;\n\nconst Due = styled.div`\n  color: #EAE7DC;\n  font-size: 14px;\n  text-decoration: none;\n  position: absolute;\n  bottom: 25px;\n  left: 25px;\n  // text-align:center;\n`;\n\n\nconst ClassObject = ({ title, minDate, dispatch, classID }) => {\n  \n  let nextDate;\n  if(minDate){\n    nextDate = moment(minDate).format(\"MMM Do\");\n  }else{\n    nextDate = \"N/A\";\n  }\n  console.log(\"class: '\" + title + \"' has date: \" + nextDate);\n  \n  // dispatch(addListByID(classID, \"Assignments\"));\n\n  return (\n    <Outline>\n      <ClassContent>\n        <Title>{title}</Title>\n        <Due>\n          Next due date: {nextDate}\n        </Due>\n      </ClassContent>\n    </Outline>\n  );\n};\n\nexport default connect()(ClassObject);\n","import React, {useState} from 'react';\nimport styled from \"styled-components\";\nimport { editClassTitle } from \"../actions\";\nimport Icon from \"@material-ui/core/Icon\";\nimport { connect } from \"react-redux\";\nimport \"./css/main.css\";\n\n\nconst DeleteButton = styled(Icon)`\n  position: absolute;\n  right: 35px;\n  opacity: 0.5;\n  margin-top: 3px;\n  cursor: pointer;\n  &:hover {\n    opacity: 0.8;\n  }\n  \n`;\n\nconst TitleClass = styled.div`\n    max-width: 220px;\n    font-size: 16px;\n    float: left;\n    margin-top: 5px;\n`;\n\n\nconst BurgerClass = ({ title, classID, dispatch }) => { \n\n    const [isEditing, setIsEditing] = useState(false);\n    const [classTitle, setClassTitle] = useState(title);\n\n    const handleDeleteClass = () => {\n        console.log(\"class being deleted has id: \" + classID);\n        dispatch(editClassTitle(classID, \"deleted\")); //fake deletes it\n    };\n\n\n    const renderEditInput = () => {\n        return (\n          <form onSubmit={handleFinishEditing}>\n            <input\n              type=\"text\"\n              value={classTitle}\n              onChange={handleClassChange}\n              autoFocus\n              onFocus={handleFocus}\n              onBlur={handleFinishEditing}\n              className=\"burger-edit\"\n            />\n          </form>\n        );\n      };\n    \n      const handleFocus = e => {\n        e.target.select();\n      };\n    \n      const handleClassChange = e => {\n        e.preventDefault();\n        setClassTitle(e.target.value);\n      };\n    \n      const handleFinishEditing = e => {\n        setIsEditing(false);\n        dispatch(editClassTitle(classID, classTitle));\n      };\n\n    return (\n        <div>\n            { isEditing ? (renderEditInput()) : \n            (\n            <ul>\n                <li>\n                    <TitleClass onClick={() => setIsEditing(true)}>\n                        {classTitle}\n                    </TitleClass>\n                    <DeleteButton style={{fontSize: 20, float: 'right'}} onClick={handleDeleteClass}>\n                        delete\n                    </DeleteButton>                    \n                </li>\n            </ul>\n            )}\n        </div>\n    );\n};\n\n\nexport default connect()(BurgerClass);","import React from 'react';\nimport { connect } from \"react-redux\";\nimport \"./css/main.css\";\nimport ICAL from \"ical.js\";\nimport { addCard, addClass, addListByID } from \"../actions\";\nimport moment from \"moment\";\nimport Button from \"@material-ui/core/Button\";\n\n\n\nlet classMap = new Map();\n\nconst FileUpload = ({classes, classOrder, lists, cards, dispatch}) => {\n\n    let fileReader;\n    // let classMap = new Map();\n    // let uploaded = false;\n    // const[fileUploaded, setFileUploaded] = useState(false);\n\n    const parseEvent = (e) => {\n        //passed in a single vevent\n        //event being returned needs to have the summary's title, dtend's date\n        let event = {};\n\n        for (let i= 0; i < e[1].length; i++){\n            let prop = e[1][i];\n            if (prop[0] === \"dtend\"){\n                event[prop[0]] = prop[3];\n            }\n            if(prop[0] === \"summary\"){\n                event[prop[0]] = prop[3];\n            }\n        }\n\n        return event;\n    }\n\n    const handleFileRead = e => {\n        const content = fileReader.result;\n        //parse the content with ical.js\n\n        let fileData = ICAL.parse(content);\n        let events = fileData[2]; // the 2 index contains all the vevents\n        let result = []; //will contain all the event objects that I will then need to sort\n\n        let brackets = [];\n        // let classMap = new Map();\n\n        events.forEach(e => result.push(parseEvent(e))); \n        // console.log(result);\n        const len = Object.keys(result).length;\n\n        //creates a map with key = class name and value = array of all assignments in class\n        for(let i = 0; i < len; i++){\n            let summary = result[i].summary;\n            let dateEnd = result[i].dtend;\n            let sumLen;\n            let className = \"\";\n\n            for(let j = 0; j < summary.length-1; j++){ //star\n                if(brackets.includes(\"[\")){\n                    className += summary.charAt(j);\n                }\n                if(summary.charAt(j) === \"[\"){\n                    brackets.push(\"[\");\n                    sumLen = j-1;\n                }\n            }\n            brackets.pop();\n            let parsedSum = summary.substr(0,sumLen); //removes the className\n            let assignmentArr = [parsedSum, dateEnd];\n\n            if (!classMap.has(className)){\n                classMap.set(className, [assignmentArr]);\n                // numClasses++;\n            }else{\n                let arr = classMap.get(className) ;\n                arr.push(assignmentArr);\n                classMap.set(className, arr);\n            }\n        }\n        console.log(classMap);\n        \n        \n        //add classes\n        for(const [key, value] of classMap.entries()){\n            dispatch(addClass(key));\n        }\n\n        // //create lists, or every new class has set lists\n        \n\n    }\n\n    const handleFileChosen = (file) => {\n        fileReader = new FileReader();\n        fileReader.onloadend = handleFileRead;\n        fileReader.readAsText(file);\n    }\n\n\n    async function addLists(){\n        if(classMap.size !== 0){ //class map was filled\n            console.log(\"adding lists\");\n            // console.log(classOrder);\n\n            classOrder.map(classID => {\n                const c = classes[classID];\n                for(const [key, value] of classMap.entries()){\n                    if (c.title === key){\n                        dispatch(addListByID(classID, \"Assignments\"));\n                        dispatch(addListByID(classID, \"Quizzes\"));\n                        dispatch(addListByID(classID, \"Exams\"));\n                    }\n                }\n                // dispatch(addListByID(classID, \"Other\"));\n            });\n\n        }else{ // class not yet filled\n            console.log(\"class map not defined\")\n        }\n        // // uploaded = false;\n    }\n\n    const addCards = () => {\n\n        if(classMap.size !== 0) {\n            console.log(\"adding cards\");\n            // let value_count = 0;\n            classOrder.map(classID => {\n                const c = classes[classID]\n                const listOrder = c.lists;\n                // const listID = listOrder[i];\n                console.log(\"class: \" + c.title + \" has lists: \" + listOrder);\n                // console.log(listOrder[0]); //gives me the list id\n                listOrder.map(listID => {\n                    const l = lists[listID];\n                    // const list_title = l.title;\n                    // console.log(listl);\n                    \n                    for(const [key, value] of classMap.entries()){\n                        // console.log(value);\n                        if(key === c.title){\n                            for (let i = 0; i < value.length; i++){\n                                let text = value[i][0];\n                                let date = moment(value[i][1]).format();\n                                if (l.title === \"Exams\"){\n                                    if (text.includes(\"Exam\")){\n                                        console.log(\"belongs in exam list\");\n                                        dispatch(addCard(listID,text,date));\n                                    }\n                                }else if(l.title === \"Quizzes\"){\n                                    if(text.includes(\"Quiz\")){\n                                        console.log(\"belongs in quiz list\");\n                                        dispatch(addCard(listID,text,date));\n                                    }\n                                }else if (l.title === \"Assignments\"){\n                                    if(text.includes(\"Exam\") || text.includes(\"Quiz\")){\n                                    }else{                        \n                                        console.log(\"belongs in assignment list\");           \n                                        dispatch(addCard(listID,text,date));      \n                                    }\n                                }\n                                // console.log(\"text: \" + text);\n                                // console.log(\"date: \" + date);\n                                // dispatch(addCard(listID,text,date));\n                            }\n                        }\n                    }\n                });\n            });\n\n        }else{\n            console.log(\"nothing in class map\");\n        }\n    }\n\n    // const addComponents = () => {\n    //     // console.log(\"this is the map:\");\n    //     // for(const [key, value] of map.entries()){\n    //     //     dispatch(addClass(key));\n    //     // }\n\n    //     // console.log(classOrder);\n    // }\n\n    // function addAll() {\n    //     console.log(\"add all\");\n    //     // addLists();\n    //     if (addLists()){\n    //         addCards();\n    //     }\n    //     // if (addLists()){\n    //     //     addCards();\n    //     // }\n    //     // addCards();\n    // }\n\n\n\n    return(\n        <div>\n            <div className='upload-expense' style={{marginLeft: 50}}>\n                <input\n                    type='file'\n                    id = 'file'\n                    className = 'input-file'\n                    accept='.ics'\n                    onChange={e => handleFileChosen(e.target.files[0])}\n                />\n                \n                {/* <span>{ ? addFile(): null}</span> */}\n            </div>\n            <div style={{fontSize:12, opacity: 0.9, color: '#d1d1d1', paddingTop: 3,paddingBottom: 10, textAlign:'center', color: '#907163'}}>*upload an ical file (.ics)</div>\n            <div style={{paddingBottom:15, textAlign:'center'}}>\n                <Button size=\"small\" variant=\"contained\" style={{fontSize: 11, marginRight: 10, cursor: 'pointer'}} onClick={addLists}>\n                    Import Lists\n                </Button>\n                <Button size=\"small\" variant=\"contained\" style={{fontSize: 11,  marginRight: 10, cursor: 'pointer'}} onClick={addCards}>\n                    Import Cards\n                </Button>\n            </div>\n            {/* <a style={{fontSize: 14, cursor: 'pointer'}} onClick={addAll}>\n                Import All\n            </a> */}\n        </div>\n        \n    );\n};\n\nconst mapStateToProps = state => ({\n    classes: state.classes,\n    classOrder: state.classOrder,\n    lists: state.lists,\n    cards: state.cards,\n  });\n\nexport default connect(mapStateToProps)(FileUpload);\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addClass } from \"../actions\";\nimport ClassObject from \"./ClassObject\";\nimport Button from \"@material-ui/core/Button\";\nimport Store from \"../store\";\nimport { slide as Menu } from 'react-burger-menu';\nimport \"./css/main.css\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport BurgerClass from \"./BurgerClass\";\nimport FileUpload from \"./FileUpload\"\nimport moment from \"moment\";\n\nconst Thumbnails = styled.div`\n  flex: 1;\n  height: 50%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 20px\n`;\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-sizing: border-box;\n`;\n\nconst AddHeaders = styled.li`\n  font-size: 18px;\n  // color: white;\n  // font-family: Arial, Helvetica, sans-serif;\n`;\nconst DateTag = styled.span`\n  font-size: 20px;\n  font-weight: bold;\n  color: #907163;\n  position: absolute;\n  right: 20px;\n  font-family: Arial, Helvetica, sans-serif;\n`;\n\n\nconst AllTitle = styled.span`\n  font-size: 40px;\n  color: #907163;\n  font-weight: bold;\n  margin-top: 50px;\n  padding: 10px;\n\n`;\n\nconst ClearButton = styled(Button) `\n  // position: fixed;\n  // text-align: center;\n  // margin-top: 100%;\n  // bottom: 0;\n  width: 175px;\n  height: 40px; \n  fontSize: 12px;\n\n`;\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\n\n\n\n\n\n//shows all classes, import and add classes here\nconst Home = ({ classes, classOrder, lists, cards, dispatch }) => {\n\n  const currentDate = moment().format(\"LL\");\n  const [newClassTitle, setNewClassTitle] = useState(\"\");\n  // const [newDelete, setDelete] = useState(\"\");\n  const [showAdd, setShowAdd] = useState(false);\n  const [showEdit, setShowEdit] = useState(false);\n  const { height, width } = useWindowDimensions();\n \n\n  const handleChange = e => {\n    setNewClassTitle(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addClass(newClassTitle));\n    // console.log(classOrder);\n\n  };\n\n  const clearState = () => {\n    console.log(\"clearing state\");\n    const { persistor } = Store();\n    persistor.purge();\n    window.location.reload(false); //auto refreshes page to rehydrate redux store (not ideal)\n  }\n\n  const handleAddVisibility = () => {\n    if(showAdd){\n      setShowAdd(false);\n    }else{\n      setShowAdd(true);\n    }\n  }\n\n  const handleEditVisibility = () => {\n    if(showEdit){\n      setShowEdit(false);\n    }else{\n      setShowEdit(true);\n    }\n  }\n\n  const screenDateChange = () => {\n    if (width < 500){\n      return moment(currentDate).format(\"MMM D\"); //formatted date for mobile\n    }\n    return currentDate;\n  }\n\n\n  const renderBurgerMenu = () => {\n    return (\n      <Menu pageWrapId={\"page-wrap\"} width={ 350 }>\n        <div style={{fontSize: 24, fontWeight: 'bold'}}>\n          Add Classes \n          <ExpandMoreIcon onClick={handleAddVisibility} style={{fontSize: 30, position: 'absolute', right: 30, cursor: 'pointer'}}/>\n          <div>\n            {showAdd ? renderCreateClass() : null}\n          </div>\n        </div>\n\n        <span style={{fontSize: 24, fontWeight: 'bold'}}>\n          Edit Classes\n          <ExpandMoreIcon onClick={handleEditVisibility} style={{fontSize: 30, position: 'absolute', right: 30, cursor: 'pointer'}}/>\n          <div>\n            {showEdit ? renderEditClasses() : null}\n          </div>\n        </span>\n\n        <div style={{bottom: 10, position: 'absolute', left: 87}}>\n          <ClearButton onClick= {clearState} variant=\"contained\">Delete All Classes</ClearButton>\n        </div>\n      </Menu>\n      \n\n    );\n  };\n\n  const renderCreateClass = () => {\n    return (\n      <div style={{marginTop: 15}}>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <AddHeaders>Auto Fill</AddHeaders>\n            <div>\n              <FileUpload />\n              {/* <p style={{fontSize:12, marginLeft: 3, opacity: 0.8, color: 'white'}}>*upload an ical file (.ics)</p> */}\n              {/* <p style={{fontSize:12}}>import button</p> */}\n            </div>\n            <AddHeaders>Manually Fill</AddHeaders>\n          </div>\n          <div style={{textAlign:'center'}}>\n            <input\n              onChange={handleChange}\n              value={newClassTitle}\n              placeholder=\"Add a class title...\"\n              type=\"text\"\n              maxLength=\"60\"\n              className=\"addClassInput\"\n              />\n          </div>\n        </form>\n      </div>\n    );\n  };\n\n  const renderEditClasses = () => {\n    return classOrder.map(classID => {\n      const c = classes[classID];\n      if (c.title !== \"deleted\"){\n        return (\n          <BurgerClass key={classID} classID={classID} title={c.title}/>\n        );\n      }\n    });\n  };\n  \n  const renderClasses = () => {\n    return classOrder.map((classID) => {\n      const c = classes[classID];\n      let nearestDate;\n      //getting next due date for each class\n      if(c.title !== \"deleted\"){\n        const listOrder = c.lists;\n        let count = 0; // allows me to set first date as the nearest date\n        listOrder.map(listID=>{\n          const l = lists[listID];\n          if (l){\n            const listCards = l.cards.map(cardID => cards[cardID]);\n            listCards.map(card => {\n              // console.log(\"date: \" + card.date);\n              if (count === 0){ //initialize nearest Date to the first card,\n                nearestDate = card.date;\n                count++;\n              }else{\n                if (card.date < nearestDate){\n                  nearestDate = card.date;\n                }\n              }\n            });\n          }\n        });\n        // console.log(\"next date in the entire class is: \" + nearestDate);\n      }\n      \n      if (c.title !== \"deleted\"){\n        return (\n          <Link\n            key={classID}\n            to={`/${c.id}`}\n            style={{ textDecoration: \"none\"}}\n          >\n            <ClassObject minDate={nearestDate} classID = {classID} {...c} />\n          </Link>\n        );\n      }\n    });\n  };\n\n  return (\n    <div>\n      {renderBurgerMenu()}\n      <HomeContainer>\n        <div style={{marginBottom: 30, marginTop: 20}}>\n          <AllTitle>All Classes</AllTitle>\n          <DateTag>{screenDateChange()}</DateTag>\n        </div>\n        <Thumbnails>{renderClasses()}</Thumbnails>\n      </HomeContainer>\n\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  classes: state.classes,\n  classOrder: state.classOrder,\n  lists: state.lists,\n  cards: state.cards,\n});\n\n\n\nexport default connect(mapStateToProps)(Home);\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport TrelloClass from \"../components/TrelloClass\";\nimport Home from \"../components/Home\";\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <div>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/:classID\" component={TrelloClass} />\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { PureComponent } from \"react\";\nimport Routes from \"../routes\";\n\n\nclass App extends PureComponent {\n  render() {\n    return <Routes />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./store\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// import \"./index.css\";\nimport { createGlobalStyle } from \"styled-components\";\nimport $ from \"jquery\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst { persistor, store } = Store();\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: #EAE7DC;\n    // background-color: #EDC7B7;\n    box-sizing: border-box;\n    transition: all 0.5s ease-in;\n  }\n`;\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <GlobalStyle />\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n$(document).bind(\"DOMNodeRemoved\", function(e) {\n  console.log(\"Removed: \" + e.target.nodeName);\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// GETS RID OF LOCAL STORAGE//////////////////////////////////////////////////////////////////\n\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import { Provider } from \"react-redux\";\n// import store from \"./store\";\n// import App from \"./components/App\";\n// import * as serviceWorker from \"./serviceWorker\";\n// // import \"./index.css\";\n// import { createGlobalStyle } from \"styled-components\";\n// import $ from \"jquery\";\n\n// const GlobalStyle = createGlobalStyle`\n//   html {\n//     background-color: teal;\n//     box-sizing: border-box;\n//     transition: all 0.5s ease-in;\n//   }\n// `;\n\n// ReactDOM.render(\n//   <Provider store={store}>\n//     <GlobalStyle />\n//     <App />\n//   </Provider>,\n//   document.getElementById(\"root\")\n// );\n\n// $(document).bind(\"DOMNodeRemoved\", function(e) {\n//   console.log(\"Removed: \" + e.target.nodeName);\n// });\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();"],"sourceRoot":""}